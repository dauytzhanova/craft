{"ast":null,"code":"var _jsxFileName = \"/Users/dauytzhanovabotakoz/Documents/craft/src/components/auth/Signup.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./auth.css\";\nexport default class SignUp extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      let value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n      this.setState({\n        [e.target.name]: value\n      });\n    };\n\n    this.validate = () => {\n      //let usernameError = \"\";\n      let emailError = \"\"; //let passwordError = \"\";\n\n      if (this.state.email.incudes('@')) {\n        emailError = \"Invalid Email\";\n      }\n\n      if (emailError) {\n        this.setState({\n          emailError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      isAdmin: false,\n      hasAgreed: false,\n      usernameError: \"\",\n      emailError: \"\",\n      passwordError: \"\"\n    };\n    this.getPhp = this.getPhp.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const isValid = this.validate;\n\n    if (isValid) {\n      console.log(this.state);\n    }\n  }\n\n  getPhp() {\n    fetch('http://localhost/craft/api/demo.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    }).then(res => res.json()).then(response => response.map(el => {\n      console.log(el.email);\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"auth-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"auth-page-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"auth-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"div\", {\n      className: \"validate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.emailError), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.usernameError), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.passwordError)), React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(e),\n      className: \"auth-form\",\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"auth-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Email: \"), React.createElement(\"input\", {\n      onChange: e => this.handleChange(e),\n      type: \"email\",\n      name: \"email\",\n      className: \"auth-input\",\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"auth-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Password: \"), React.createElement(\"input\", {\n      type: \"password\",\n      onChange: e => this.handleChange(e),\n      name: \"password\",\n      className: \"auth-input\",\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"terms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      name: \"terms\",\n      value: this.state.hasAgreed,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \"I agree with all statements in \", React.createElement(\"a\", {\n      className: \"terms\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"terms of service\")), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"auth-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Sign Up \")), React.createElement(\"h5\", {\n      className: \"offer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Have an account? \", React.createElement(Link, {\n      to: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Log In\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/dauytzhanovabotakoz/Documents/craft/src/components/auth/Signup.js"],"names":["React","Component","Link","SignUp","constructor","handleChange","e","value","target","type","checked","setState","name","validate","emailError","state","email","incudes","handleSubmit","bind","username","password","firstName","lastName","isAdmin","hasAgreed","usernameError","passwordError","getPhp","preventDefault","isValid","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","response","map","el","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"./auth.css\";\n\nexport default class SignUp extends Component{\nconstructor(){\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n        username: \"\",\n        email: \"\",\n        password:\"\",\n        firstName:\"\",\n        lastName:\"\",\n        isAdmin: false,\n        hasAgreed:false,\n        usernameError:\"\",\n        emailError: \"\",\n        passwordError:\"\",\n    }\n\n    this.getPhp = this.getPhp.bind(this);\n}\n\n    handleChange = (e) =>{\n          let value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n            this.setState({\n                [e.target.name] : value,\n            })\n    }\n\n    validate = () => {\n        //let usernameError = \"\";\n        let emailError = \"\";\n        //let passwordError = \"\";\n\n        if (this.state.email.incudes('@')) {\n            emailError = \"Invalid Email\";\n        }\n\n        if (emailError) {\n            this.setState({emailError});\n            return false;\n        }\n        return true;\n    };\n\n    handleSubmit(e){\n        e.preventDefault();\n        const isValid = this.validate;\n        if(isValid){\n            console.log(this.state);\n        }\n   }\n\n   getPhp(){\n    fetch('http://localhost/craft/api/demo.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n        })\n      }).then(res => res.json()).then(response => \n       response.map(el =>{\n           console.log(el.email);\n       }))\n\n   }\n\n   render() {\n        return (\n            <div className=\"auth-page\">\n                <div className=\"auth-page-box\">\n                    <h2 className=\"auth-title\">Sign Up</h2>\n                    <div className=\"validate\">\n                        <h6>{this.state.emailError}</h6>\n                        <h6>{this.state.usernameError}</h6>\n                        <h6>{this.state.passwordError}</h6>\n                    </div>\n                    <form onSubmit={e => this.handleSubmit(e)}  className=\"auth-form\" method=\"post\">\n                        <label className=\"auth-label\">Email: </label>\n                        <input onChange={e => this.handleChange(e)} type=\"email\" name=\"email\" className=\"auth-input\" value={this.state.email} />\n                        <label className=\"auth-label\">Password: </label>\n                        <input type=\"password\" onChange={e => this.handleChange(e)} name=\"password\" className=\"auth-input\" value={this.state.password}  />\n                        <label for=\"terms\">\n                            <input type=\"checkbox\" className=\"checkbox\" name=\"terms\" value={this.state.hasAgreed} onChange={e => this.handleChange(e)}/>\n                                I agree with all statements in <a className=\"terms\" href=\"#\">terms of service</a>\n                        </label>\n                        <button type=\"submit\" className=\"auth-button\">Sign Up </button>\n                    </form>\n                    <h5 className=\"offer\">Have an account? <Link to=\"login\">Log In</Link></h5>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}